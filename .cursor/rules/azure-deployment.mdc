---
description: Azure Container Apps deployment patterns and GitHub Actions workflows
globs:
  - "**/.github/workflows/*.yml"
  - "**/containerapp.yaml"
  - "**/.env*"
alwaysApply: false
---

## Azure Container Apps Deployment

**Critical Consistency Requirements**:
- `CONTAINER_APP_NAME` in GitHub workflow must match container name in containerapp.yaml
- Image names must be identical between docker-compose.yml and containerapp.yaml
- `ENVIRONMENT_NAME` must match across workflow and containerapp.yaml

**GitHub Workflow Environment Variables to Update**:
```yaml
env:
  CONTAINER_APP_NAME: 'your-app-name'  # MUST UPDATE
  ENVIRONMENT_NAME: 'your-app-env'     # MUST UPDATE
  LOCATION: 'eastus2'
```

**Container App Config Placeholders** (`containerapp.yaml`):
- `SUBSCRIPTION_ID` → replaced with Azure subscription ID
- `RESOURCE_GROUP` → replaced with resource group name  
- `ENVIRONMENT_NAME` → replaced with container app environment
- `REGISTRY` → replaced with ACR URL
- `IMAGE_TAG_APP` → replaced with commit SHA

**Required Organization Secrets**:
- `AZURE_CREDENTIALS_AIPLAYGROUND`
- `REGISTRY_LOGIN_SERVER_AIPLAYGROUND`
- `REGISTRY_USERNAME_AIPLAYGROUND`
- `REGISTRY_PASSWORD_AIPLAYGROUND`
- `RESOURCE_GROUP_AIPLAYGROUND`
- `AZURE_SUBSCRIPTION_ID`

**Environment Variables**:
- Single `.env` file in project root
- Document all variables in `.env.example`
- Use `${REGISTRY:-}${REGISTRY:+/}` pattern in compose files for local/CI compatibility

**Image Naming Pattern**:
```yaml
# docker-compose.yml
image: ${REGISTRY:-}${REGISTRY:+/}your-app:${COMMIT_SHA:-local-dev}

# containerapp.yaml
image: REGISTRY/your-app:IMAGE_TAG_APP
```

**Deployment Process**:
1. Build containers with Docker Compose
2. Push to Azure Container Registry
3. Replace placeholders in containerapp.yaml
4. Deploy using Azure Container Apps action